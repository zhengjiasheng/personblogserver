<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjs.blogserver.dao.T_bloggerMapper" >
  <resultMap id="BaseResultMap" type="com.zjs.blogserver.bean.T_blogger" >
    <id column="blogger_id" property="blogger_id" jdbcType="INTEGER" />
    <result column="user_name" property="user_name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nick_name" property="nick_name" jdbcType="VARCHAR" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="img_url" property="img_url" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zjs.blogserver.bean.T_blogger" extends="BaseResultMap" >
    <result column="profile" property="profile" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    blogger_id, user_name, password, nick_name, sign, img_url
  </sql>
  <sql id="Blob_Column_List" >
    profile
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_blogger
    where blogger_id = #{blogger_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_blogger
    where blogger_id = #{blogger_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zjs.blogserver.bean.T_blogger" >
    insert into t_blogger (blogger_id, user_name, password, 
      nick_name, sign, img_url, 
      profile)
    values (#{blogger_id,jdbcType=INTEGER}, #{user_name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nick_name,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, #{img_url,jdbcType=VARCHAR}, 
      #{profile,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zjs.blogserver.bean.T_blogger" >
    insert into t_blogger
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="blogger_id != null" >
        blogger_id,
      </if>
      <if test="user_name != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nick_name != null" >
        nick_name,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="img_url != null" >
        img_url,
      </if>
      <if test="profile != null" >
        profile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="blogger_id != null" >
        #{blogger_id,jdbcType=INTEGER},
      </if>
      <if test="user_name != null" >
        #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nick_name != null" >
        #{nick_name,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="img_url != null" >
        #{img_url,jdbcType=VARCHAR},
      </if>
      <if test="profile != null" >
        #{profile,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjs.blogserver.bean.T_blogger" >
    update t_blogger
    <set >
      <if test="user_name != null" >
        user_name = #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nick_name != null" >
        nick_name = #{nick_name,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="img_url != null" >
        img_url = #{img_url,jdbcType=VARCHAR},
      </if>
      <if test="profile != null" >
        profile = #{profile,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where blogger_id = #{blogger_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zjs.blogserver.bean.T_blogger" >
    update t_blogger
    set user_name = #{user_name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nick_name = #{nick_name,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      img_url = #{img_url,jdbcType=VARCHAR},
      profile = #{profile,jdbcType=LONGVARCHAR}
    where blogger_id = #{blogger_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjs.blogserver.bean.T_blogger" >
    update t_blogger
    set user_name = #{user_name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nick_name = #{nick_name,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      img_url = #{img_url,jdbcType=VARCHAR}
    where blogger_id = #{blogger_id,jdbcType=INTEGER}
  </update>

  <select id="findByUserName" parameterType="String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_blogger
    where user_name = #{user_name,jdbcType=VARCHAR}
  </select>
</mapper>